{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nconst initialUserState = {\n  userProfile: null,\n  isLoading: false\n};\nexport const fetchgetUserProfile = createAsyncThunk('user/fetchgetUserProfile', async payload => {\n  const result = await fetch('http://localhost:9090/user/get-profile?token=' + payload).then(data => data.json());\n  return result;\n});\nconst userSlice = createSlice({\n  name: 'user',\n  initialState: initialUserState,\n  reducers: {},\n  extraReducers: build => {\n    build.addCase(fetchgetUserProfile.fulfilled, (state, action) => {\n      if (action.payload.code === 200) {\n        state.userProfile = action.payload.data;\n      }\n    });\n  }\n});\nexport default userSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","initialUserState","userProfile","isLoading","fetchgetUserProfile","payload","result","fetch","then","data","json","userSlice","name","initialState","reducers","extraReducers","build","addCase","fulfilled","state","action","code","reducer"],"sources":["/Users/berkhayta/Desktop/React-Social-Media/react-social-java14/src/store/feature/userSlice.tsx"],"sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\"\nimport { IResponse } from \"../../components/models/IResponse\"\n\n\nexport interface IUserProfile{\n  name: string\n  userName: string\n  avatar: string\n  followerCount: number\n  followingCount: number\n  about: string\n  bornDate: number\n  phone: string\n  address: string\n}\ninterface IUserState {\n    userProfile: IUserProfile | null,\n    isLoading: boolean\n}\nconst initialUserState: IUserState = {\n    userProfile: null,\n    isLoading: false\n}\n\nexport const fetchgetUserProfile = createAsyncThunk(\n    'user/fetchgetUserProfile',\n    async(payload: string)=>{\n        const result = await fetch('http://localhost:9090/user/get-profile?token='+payload)\n        .then(data=>data.json());\n        return result;\n    }\n)\nconst userSlice = createSlice({\n    name: 'user',\n    initialState: initialUserState,\n    reducers: {},\n    extraReducers: (build)=>{\n        build.addCase(fetchgetUserProfile.fulfilled,(state,action: PayloadAction<IResponse>)=>{\n            if(action.payload.code===200){\n                state.userProfile = action.payload.data;\n            }\n        })\n    }\n});\n\nexport default userSlice.reducer;"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAuB,kBAAkB;AAmB/E,MAAMC,gBAA4B,GAAG;EACjCC,WAAW,EAAE,IAAI;EACjBC,SAAS,EAAE;AACf,CAAC;AAED,OAAO,MAAMC,mBAAmB,GAAGL,gBAAgB,CAC/C,0BAA0B,EAC1B,MAAMM,OAAe,IAAG;EACpB,MAAMC,MAAM,GAAG,MAAMC,KAAK,CAAC,+CAA+C,GAACF,OAAO,CAAC,CAClFG,IAAI,CAACC,IAAI,IAAEA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;EACxB,OAAOJ,MAAM;AACjB,CACJ,CAAC;AACD,MAAMK,SAAS,GAAGX,WAAW,CAAC;EAC1BY,IAAI,EAAE,MAAM;EACZC,YAAY,EAAEZ,gBAAgB;EAC9Ba,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,KAAK,IAAG;IACpBA,KAAK,CAACC,OAAO,CAACb,mBAAmB,CAACc,SAAS,EAAC,CAACC,KAAK,EAACC,MAAgC,KAAG;MAClF,IAAGA,MAAM,CAACf,OAAO,CAACgB,IAAI,KAAG,GAAG,EAAC;QACzBF,KAAK,CAACjB,WAAW,GAAGkB,MAAM,CAACf,OAAO,CAACI,IAAI;MAC3C;IACJ,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AAEF,eAAeE,SAAS,CAACW,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}